


function verifyK8s() {

    const kubeconfig = `
    apiVersion: v1
    clusters:
    - cluster:
        insecure-skip-tls-verify: true
        server: https://localhost:6443
      name: docker-for-desktop-cluster
    contexts:
    - context:
        cluster: docker-for-desktop-cluster
        user: docker-for-desktop
      name: docker-for-desktop
    current-context: docker-for-desktop
    kind: Config
    preferences: {}
    users:
    - name: docker-for-desktop
      user:
        client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM5RENDQWR5Z0F3SUJBZ0lJU0t2S3JsaVJaQnN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB4T0RFeE16QXdOVEV4TURSYUZ3MHlNREE0TVRFd05qQXlNemhhTURZeApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sc3dHUVlEVlFRREV4SmtiMk5yWlhJdFptOXlMV1JsCmMydDBiM0F3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREFadGlubk5DN2grMC8KaTZrdnF3dWFIUW1hcFJiWXBFRk84bHV0ZTRCaFNBZitsb0tnNXM2VUF0cTh0UWM4YUhNK2FiZ2VvZTU4bVR1TApGRmkvM0JhYmNsK0JWZEhMLzgvdDBicUlJcStFcG1SK2RmUEV1ZjczUFlXWmRJMVFkMEtnZDJscGJSWkZOd0xHClFvcnY3YlNxS3lPUk1yNEl1MTBUKy9aZkVPOFFZN1VyM3diZWJwUG1tUHpUSmJwaFNyUURHTHZodnRXejVMU3AKd09WTUpodTExQTk5R29aOHZ1dFJVMm9kbm5KbE5waDNtb1BvSkZMRitJTVJhV1FWQ2RWcXBBWjBsekFsamtIdAplYXhHakdBanhPVnNCS3k5L3hqNnJubi90dDQ3cmNsWTBMU3pBd1J0bjV2UGtIZVROMXd4OGgvNHhTczFZaWNqCmtsb1NJeW5YQWdNQkFBR2pKekFsTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUYKQlFjREFqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFhdmg0L1ZZU0tGUVBGQ285ZVoxdk1uOU1xcWtjUkhjNQpDNktWeVp0QUhSWWdqNWg3NnBWS2c5MWRQUmxDS0xHQ0U3WmZ6QUNyalBZSzcxVkZPQ2R1RHVVVS9menI3UlFKCkVCVDIvR0hBbUNWS0NhOU9KZEJnMUE5eldXY0IrZHc0K0NPejh6dkZFdmlDV3o1TVhMYjVZQ2twVUhGRTdTVEwKUWFYZkhyNFpaNk9SMVVWWmNuMXl5NzNTL1BZUUxXL3BHTkxhSnp6T2NVNTNCcXhZbnhESzlCUlpUMkpKZFVGeApIY0t5cUVDQkJrdnc5czRJTUNtdTJWdnZjYlhob255K1VIajJoRktJWDVVeWQrMlpMTDhOQVJEYzRwY3daeldkClFNTWVLbGVWM1lKMEJCK0dTVi9ZYzlESHcvTnJqaXlrd3Z5a1cwNk50bVNMd2ZrTGEyN2l3UT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd0diWXA1elF1NGZ0UDR1cEw2c0xtaDBKbXFVVzJLUkJUdkpiclh1QVlVZ0gvcGFDCm9PYk9sQUxhdkxVSFBHaHpQbW00SHFIdWZKazdpeFJZdjl3V20zSmZnVlhSeS8vUDdkRzZpQ0t2aEtaa2ZuWHoKeExuKzl6MkZtWFNOVUhkQ29IZHBhVzBXUlRjQ3hrS0s3KzIwcWlzamtUSytDTHRkRS92Mlh4RHZFR08xSzk4RwozbTZUNXBqODB5VzZZVXEwQXhpNzRiN1ZzK1MwcWNEbFRDWWJ0ZFFQZlJxR2ZMN3JVVk5xSFo1eVpUYVlkNXFECjZDUlN4ZmlERVdsa0ZRblZhcVFHZEpjd0pZNUI3WG1zUm94Z0k4VGxiQVNzdmY4WStxNTUvN2JlTzYzSldOQzAKc3dNRWJaK2J6NUIza3pkY01mSWYrTVVyTldJbkk1SmFFaU1wMXdJREFRQUJBb0lCQUJzR0Z3WXIwM0dUblBJZwo5cWw0VjgvVXBrV3ZURzh2V3ZEd3Y0bTFZQW5KNlQyTC9Gc0hNQnEvNytNemRnbTVEZjdGTUpRMDRGOWwwbVF0CmZtMnNSd3ljV3VlNm14WVJIeTVqRjlVSk1pZnFpeERzRmtvYWFjSm1STDZTRFVzeEJRMnUyQUp6elAzNXhRejkKeWEvN2JqVzhpMmxZZkRLVHhuWUpITWlyZ3ppRTJrNnJnZE5SQU9zcnd6RXVhSG9FZ0MxakFNMW1rMi9jTS82Zgo3V2NCNVRraGZoUWs2NzZpdUh3a0lMVStqTEhKTitvdGMvMEhQVDhHc1hyelZ0dDJSenhha2hTZ2dwaGFKajZBCmFkSjYrQ1p0WHhsWFVTK2x2cjV0dWxQS01lNzdpQ0FTRG5ySWl0S282TWZBZktPWUs1cERQZWpNTm1UekQxa2MKR0ZlRlNHa0NnWUVBNCt6MFhtT1BUbXJGZ2cyaFd2bWQ1eW4xc205QlBhWWhpUkFOTE1Ma1FRWFFaMEtDZk1UMAoxSW9UWExIKytKUzZ5K2F2WlhaTXh5UVVjdjhQUzYybWw5YVpqSm9xZCsvekhKYUlYT1k2WDVabTlid1FOWDVqCkdidGgvb1I4YzdIc0tUaHk1ejU2MmYwWnlNcERtb0s5N0VXYnFUNjRwZ3o4ZVNlRlBmY0JXWnNDZ1lFQTJCbTkKRCtuME5PQXRUSVlDQ0R2S09BSEtudDFHTXZMaEVqYTVscFN0NUxvQm53RjRYVVpBaUZXWTkrSmxmZDJPb3F2Mwo0U25xbmJyZDV3aFlVaDM5b0szVHUxN1ErTkZ3SWkzS3VpeGdEcFh5THBOdjUzQmRLVVBLZ0NyQnF5cDJpR29yCjh6TDdGM2VDd0xzQ2ZISmYwVnhkV3lvOEo2NDlIM24zaXpHV0FuVUNnWUFjQWNEaFhGQityVVlKdmcwR3RjZCsKWVR5TXFYa1Z6elV0dDJnM0NOZXRXYjZMQWJReENxNmU4engvMW10ak5qdGgxTDNXdE51b1dMbWVpOUxnVkwwMAp5U3pqQndxUzVFdzJSaFVKZlV6TTlCbEF0dFF6RG8yMDJyNm0zTGJDTEttOVF1OXpsTXpadm0wTnJEVDBabjVaCjZ3Kytrek56VEFNMkMvSW1kQlNaWXdLQmdDdTF5UkFXK2xaWG9kSUFxUmlSUDIza3J0OURVcGVybU9yZU50dkcKWndZRXVaODM1T2k0OVFTZWk3cFlDTDlVdVMwZUs1MVhwU1VTVHlBVUNBbFVGNkVRaCtzMlduNTVubnpMVmw0aAo2NndIbUZ6alpaY2ltelZsaU9nenZjaXBaaUJobVZJdjFhb0JlbWtSYW9kUmV5QVYxcXhCOXJqdi9WMElocEdaCkRnYWhBb0dCQUs2SWM2amFUUUZKZmhteGRqZzhCVzZVUldZbW9iZ3M0L0VHRnk5dFlMMlpKRzAxZjJJZ1I2WGMKcHlNYjRBWW8xZDMrM0VWckJ4VlUrZWwyNTV2MHdSQVFKUUNYdlRlY0Y3c3hnc0QrVTcrUlowQThNMVU4N011SwpLRy83dGIwTm96OEVwSTExTmEwd25VdjRla2lYZTFXRWxsKzc4eHVLSFh2b2Q0bTBrY2NUCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==`    
    const k8s = require('@kubernetes/client-node');
    const kc = new k8s.KubeConfig();
    kc.loadFromString(kubeconfig);
    
    const k8sApi = kc.makeApiClient(k8s.CoreV1Api);
    
    k8sApi.listNamespacedPod('default').then((res) => {
        console.log(res.body);
    });
}

verifyK8s()